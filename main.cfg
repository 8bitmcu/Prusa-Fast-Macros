[gcode_macro PRINT_START]
description: Print Start macro as should be called from the slicer
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
    

    M117 Heating...
    M140 S{BED_TEMP}                 ; Start heating bed to final temp and don't wait 
    M104 S{EXTRUDER_TEMP}            ; Start heating extruder to final temp and don't wait
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP-3} MAXIMUM={BED_TEMP+5}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-3} MAXIMUM={EXTRUDER_TEMP+3}
    
    M117 Probing bed...
    BED_MESH_CLEAR                   ; Clear bed mesh
    G28                              ; Home the printer
    G90                              ; Absolute positioning mode

    BED_MESH_CALIBRATE               ; Measure bed mesh
    SET_GCODE_OFFSET Z=0.0           ; Reset the G-Code Z offset
    APPLY_BUILD_SHEET_ADJUSTMENT     ; sets bed surface from saved vars
    
    M117                             ; Clear message on LCD
    CUSTOM_LINE_PURGE                ; Purge and then ready to go
    #SKEW_PROFILE LOAD=CaliFlower
    


[gcode_macro PRINT_END]
description: Print End macro as should be called from the slicer
gcode:
    #SET_SKEW CLEAR=1
    _TOOLHEAD_PARK_PAUSE_CANCEL       ; Park
    RESPOND PREFIX=tgnotify MSG="Print Complete" ; Notify on Telegram that the print is done
    M84 X Y E                         ; Disable steppers
    TURN_OFF_HEATERS                  ; Disable heaters
    M106 S0                           ; Disable fans
    BED_MESH_CLEAR                    ; Clear bed mesh

    # Restore Pressure Advance in case it was overwritten during print
    {% set SAVED_PA = printer.configfile.settings.extruder.pressure_advance %}
    SET_PRESSURE_ADVANCE ADVANCE={SAVED_PA}

    # Restore Velocity Limits in case they were overwritten during print
    {% set SAVED_SCV = printer.configfile.settings.printer.square_corner_velocity %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={SAVED_SCV} 

    {% set SAVED_MCR = printer.configfile.settings.printer.minimum_cruise_ratio %}
    SET_VELOCITY_LIMIT MINIMUM_CRUISE_RATIO={SAVED_MCR} 



[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
    ## Move head and retract only if not already in the pause state and park set to true
    {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
        _TOOLHEAD_PARK_PAUSE_CANCEL
    {% endif %}
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    M106 S0     ; Disable fans
    M18         ; Disable steppers

    # Restore Pressure Advance in case it was overwritten during print
    {% set SAVED_PA = printer.configfile.settings.extruder.pressure_advance %}
    SET_PRESSURE_ADVANCE ADVANCE={SAVED_PA}

    # Restore Velocity Limits in case they were overwritten during print
    {% set SAVED_SCV = printer.configfile.settings.printer.square_corner_velocity %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={SAVED_SCV} 

    {% set SAVED_MCR = printer.configfile.settings.printer.minimum_cruise_ratio %}
    SET_VELOCITY_LIMIT MINIMUM_CRUISE_RATIO={SAVED_MCR} 



[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
    ##### set park positon for x and y #####
    {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    {% set z_park_delta = 10.0 %}
  
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - z_park_delta) %}
        {% set z_safe = z_park_delta %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
  
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
        M83
        G1 E-{extrude} F2100
        {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91
        G1 Z{z_safe} F900
        G90
        G1 X{x_park} Y{y_park} F12000
        {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
    {% else %}
        {action_respond_info("Printer not homed")}
    {% endif %}


    
[gcode_macro CUSTOM_LINE_PURGE]
description: Custom extra long purge line
gcode:
    SAVE_GCODE_STATE NAME=custom_line_purge
    G1 X0 Y-4 F12000        ; Move to 0,-4 very fast
    M83                     ; extruder relative mode
    G0 X0 Y-4 Z0 F4000      ; move to the purge starting position
    G92 E0                  ; reset extruder position
    G1 E3                   ; prime hotend
    G0 E14 X60 Z0.2 F2500   ; purge
    G0 X100 E8 F2500        ; purge
    G0 X140 E8 F2650        ; purge
    G0 X190 E8 F2800        ; purge
    G0 X196 Z0.05 F8000     ; wipe, move close to the bed
    G0 X204 Z0.2 F8000      ; wipe, move quickly away from the bed
    RESTORE_GCODE_STATE NAME=custom_line_purge
    G92 E0                  ; reset extruder position



[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=unload_state
    G91
    {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
        M117 Heating...
        # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
        M109 S{params.TEMP|default(220, true)}
    {% endif %}
    SET_FILAMENT_SENSOR SENSOR=fsensor ENABLE=0
    M117 Unloading filament...
    G92 E0.0
    G91
    G1 E-20 F500
    G1 E-100 F2000
    G90
    G92 E0.0
    M400
    M117 Filament unloaded!
    RESTORE_GCODE_STATE NAME=unload_state
    SET_FILAMENT_SENSOR SENSOR=fsensor ENABLE=1



[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=load_state
    G91
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
        M117 Heating...
        M109 S{params.TEMP|default(220, true)}
    {% endif %}
    SET_FILAMENT_SENSOR SENSOR=fsensor ENABLE=0
    M117 Loading filament...
    # Load the filament into the hotend area.
    G92 E0.0
    G91
    G1 E100 F400
    G90
    G92 E0.0
    M400
    M117 Filament loaded!
    SET_FILAMENT_SENSOR SENSOR=fsensor ENABLE=1
    RESTORE_GCODE_STATE NAME=load_state
