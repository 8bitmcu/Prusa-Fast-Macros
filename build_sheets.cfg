# As defined in https://github.com/garethky/klipper-voron2.4-config/blob/mainline/printer_data/config/build-sheets.cfg

[gcode_macro INSTALL_BUILD_SHEET]
description: Install a build sheet and save settings
variable_parameter_NAME: "Unknown Build Sheet"
variable_parameter_OFFSET: 0.0
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set sheet_name = (params.NAME | default("Unknown Build Sheet") | string) %}    
    {% set sheet_offset = (params.OFFSET | default(0.0) | float) %}
    {% set sheet_key = ("build_sheet " ~ (sheet_name | lower | replace(" ", "_"))) %}
    {% set sheet = (svv[sheet_key] | default(None)) %}
    {% if not sheet %}
        # the sheet does not exist, create it
        {% set sheet = {"name": sheet_name, "offset": sheet_offset} %}
    {% endif %}
    SAVE_VARIABLE VARIABLE="{sheet_key}" VALUE="{sheet | pprint}"
    SAVE_VARIABLE VARIABLE="build_sheet installed" VALUE="'{sheet_key}'"
    SHOW_BUILD_SHEET
    RESPOND TYPE=command MSG="action:prompt_end"



[gcode_macro SHOW_BUILD_SHEET]
description: Displays the currently used build sheet and it's offset
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set sheet_key = (svv["build_sheet installed"] | string) %}
    {% set sheet = (svv[sheet_key] | default(None)) %}
    {% if sheet %}
        {action_respond_info("Build sheet: %s, Offset: %.3fmm" % (sheet.name, sheet.offset))}
        M117 {"offset: %.3fmm" % sheet.offset}
    {% else %}
        {action_respond_info("No build sheet installed") }
    {% endif %}



[gcode_macro SET_GCODE_OFFSET]
description: Overwrites the original gcode so it saves the offset each time we adjust it
rename_existing: _BUILD_SHEETS__SET_GCODE_OFFSET
gcode:
    # this runs first so if the caller messed up the params it failes
    _BUILD_SHEETS__SET_GCODE_OFFSET {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
           endfor %}

    {% set svv = printer.save_variables.variables %}
    {% set sheet_key = (svv["build_sheet installed"] | string) %}
    {% set sheet = (svv[sheet_key] | default(None)) %}
    {% if sheet and (params.Z_ADJUST is defined) and ((params.Z_ADJUST | float) != 0.0) and ((params.MOVE | int) == 1) %}
        {% set _ = sheet.__setitem__("offset", (sheet.offset + (params.Z_ADJUST | default(0.0) | float))) %}
        #{% set sheet_literal = ('{"name": "%s", "offset": %.3f}' % (sheet.name, offset)) %}
        SAVE_VARIABLE VARIABLE="{sheet_key}" VALUE="{sheet | pprint}"
        SHOW_BUILD_SHEET
    {% endif %}



[gcode_macro APPLY_BUILD_SHEET_ADJUSTMENT]
description: Applies the sheet offset adjustment for the installed build sheet, call from your PRINT_START macro
gcode:
    # get the offset from saved variables
    {% set svv = printer.save_variables.variables %}
    {% set sheet_key = (svv["build_sheet installed"] | string) %}
    {% set sheet = (svv[sheet_key] | default(None)) %}
    {% if sheet %}
        # log this to the console so if there is an issue with the print the user can see which sheet the printer thought it had installed
        {action_respond_info("Applying offset: %.3fmm for build sheet: %s" % (sheet.offset, sheet.name))}
        _BUILD_SHEETS__SET_GCODE_OFFSET Z_ADJUST={sheet.offset} MOVE=1
    {% else %}
        {action_respond_info("No build sheet installed, offset adjustment: 0.000mm") }
    {% endif %}



[gcode_macro SELECT_BUILD_SHEET]
description: Use Mainsail Macro Prompts to select a build sheet
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set installed_sheet = svv["build_sheet installed"] | string %}
    RESPOND TYPE=command MSG="action:prompt_begin Select Build Sheet"
    RESPOND TYPE=command MSG="action:prompt_text Select Build Sheet to Install"
    {% for key_name, sheet in svv | dictsort %}
        {% if key_name.startswith("build_sheet ") and key_name != "build_sheet installed" %}
            {% set btn_color = "primary" if key_name == installed_sheet else "secondary" %}
            RESPOND TYPE=command MSG="{ "action:prompt_button %s|INSTALL_BUILD_SHEET NAME='%s'|%s" % (sheet.name, sheet.name, btn_color) }"
        {% endif %}
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_show"


